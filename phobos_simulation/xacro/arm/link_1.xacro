<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="link_1">

<!-- GEOMETRY -->
    <xacro:macro name="link_1_geometry_1">
        <origin rpy="0 0 0" xyz="${-link_1_length/2} 0 0" />
        <geometry>
            <box size="${link_1_length} ${link_1_width} ${link_1_height}"/>
        </geometry>
    </xacro:macro>

    <xacro:macro name="link_1_geometry_2">
        <origin rpy="1.57075 0 0" xyz="${-link_1_length} 0 ${link_1_height/2}" />
        <geometry>
            <cylinder length="${link_1_width}" radius="${link_1_height}"/>
        </geometry>
    </xacro:macro>

<!-- VISUAL -->
    <xacro:macro name="link_1_visual">
        <origin xyz="0.07 -0.05 -0.050" rpy="0.045 0.13 1.57075"/>
        <geometry>
            <mesh filename="package://phobos_meshes/rover_stl/stopien_3.STL" scale="0.001 0.001 0.001"/>
        </geometry>
    </xacro:macro>


<!-- MATERIAL -->
    <xacro:macro name="link_1_material">
        <material name="light_blue">
            <color rgba=".3 .3 .6 1"/>
        </material>
    </xacro:macro>

<!-- LINK -->
    <xacro:macro name="link_1" params="name parent x y z ">
        <link name="${name}">
            <visual>
                <xacro:link_1_visual/>
                <xacro:link_1_material/>
            </visual>

            <collision>
                <xacro:link_1_geometry_1/>
            </collision>
            <collision>
                <xacro:link_1_geometry_2/>
            </collision>
            <inertial>
                 <origin rpy="0 0 0" xyz="${-link_1_length/2} 0 0" />
                 <mass value="1"/>
                 <inertia ixx=".003" ixy="0.000" ixz="0.000" iyy=".003" iyz="0.000" izz=".003"/>
            </inertial>
        </link>
        <gazebo reference="${name}">
            <mu1> .2 </mu1>
            <mu2> .2 </mu2>
            <material> Gazebo/Grey </material>
            <selfCollide>True</selfCollide>
        </gazebo>

        <joint name="${name}_joint" type="revolute">
            <parent link="${parent}"/>
            <child link="${name}"/>
            <origin rpy="0 1.57075 0" xyz="${x} ${y} ${z}"/>
            <axis xyz="0 1 0"/>
            <limit effort="100" velocity="1" lower="-1.25" upper="1.6"/>
            <dynamics damping="1"/>
        </joint>
        <!--gazebo reference="${name}_joint">
            <stopCfm>0.5</stopCfm>
            <stopErp>0.8</stopErp>
            <provideFeedback>true</provideFeedback>
            <implicitSpringDamper>true</implicitSpringDamper>
            <fudgeFactor>0.0</fudgeFactor>
        </gazebo-->
        <gazebo>
            <plugin name="joint_limiter_${name}" filename="libJointLimiter.so">
                <joint>${name}_joint</joint>
                <topic>/simulation/controller/vel/${name}</topic>
                <lower>-1.25</lower>
                <upper>1.6</upper>
            </plugin>
        </gazebo>
        <gazebo>
            <plugin name="joint_encoder_${name}" filename="libJointEncoder.so">
                <joint>${name}_joint</joint>
                <topic>/simulation/encoder/abs/${name}</topic>
                <lower>-1.25</lower>
                <upper>1.6</upper>
                <absolute>1</absolute>
                <resolution>10000</resolution>
            </plugin>
        </gazebo>
        <gazebo>
            <plugin name="joint_controller_${name}" filename="libControllerPID.so">
                <joint>${name}_joint</joint>
                <topic>/simulation/controller/vel/${name}</topic>
                <Kp>30</Kp>
                <Ki>3</Ki>
                <Kd>2</Kd>
            </plugin>
        </gazebo>

        <!--transmission name="${name}_transmission">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${name}_joint">
                <hardwareInterface>EffortJointInterface</hardwareInterface>
            </joint>
            <actuator name="${name}_motor">
                <hardwareInterface>EffortJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission-->

    </xacro:macro>
</robot>
